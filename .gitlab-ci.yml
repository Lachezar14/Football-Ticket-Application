# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

# Disable the Gradle daemon for Continuous Integration servers as correctness 
# is usually a priority over speed in CI environments. Using a fresh 
# runtime for each build is more reliable since the runtime is completely 
# isolated from any previous builds. 

variables: 
  GRADLE_OPTS: "-Dorg.gradle.daemon=false" 

stages: 
  - build 
  - test
  - deploy

build: 
  stage: build 
  script:
      - cd football-tickets-app
      - ./gradlew assemble -x test 

test: 
  stage: test 
  script:
      - cd football-tickets-app
      - ./gradlew test

sonarqube:
  stage: test
  script:
      - cd football-tickets-app
      - ./gradlew sonarqube

deploy:
    stage: deploy
    script:
        - cd football-tickets-app
        - docker compose up -d --build
